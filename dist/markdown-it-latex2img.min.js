/*! markdown-it-latex2img 0.0.2 https://github.com/makergyt/markdown-it-latex2img @license MIT */!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).markdownitLatex2img=e()}}((function(){return function e(r,n,t){function o(c,s){if(!n[c]){if(!r[c]){var l="function"==typeof require&&require;if(!s&&l)return l(c,!0);if(i)return i(c,!0);var f=new Error("Cannot find module '"+c+"'");throw f.code="MODULE_NOT_FOUND",f}var u=n[c]={exports:{}};r[c][0].call(u.exports,(function(e){return o(r[c][1][e]||e)}),u,u.exports,e,r,n,t)}return n[c].exports}for(var i="function"==typeof require&&require,c=0;c<t.length;c++)o(t[c]);return o}({1:[function(e,r,n){"use strict";function t(e,r){let n,t,o=e.posMax,i=!0,c=!0;return n=r>0?e.src.charCodeAt(r-1):-1,t=r+1<=o?e.src.charCodeAt(r+1):-1,(32===n||9===n||t>=48&&t<=57)&&(c=!1),32!==t&&9!==t||(i=!1),{can_open:i,can_close:c}}function o(e,r){let n,o,i,c,s;if("$"!==e.src[e.pos])return!1;if(c=t(e,e.pos),!c.can_open)return r||(e.pending+="$"),e.pos+=1,!0;for(n=e.pos+1,o=n;-1!==(o=e.src.indexOf("$",o));){for(s=o-1;"\\"===e.src[s];)s-=1;if((o-s)%2==1)break;o+=1}return-1===o?(r||(e.pending+="$"),e.pos=n,!0):o-n==0?(r||(e.pending+="$$"),e.pos=n+1,!0):(c=t(e,o),c.can_close?(r||(i=e.push("math_inline","math",0),i.markup="$",i.content=e.src.slice(n,o)),e.pos=o+1,!0):(r||(e.pending+="$"),e.pos=n,!0))}function i(e,r,n,t){let o,i,c,s,l,f=!1,u=e.bMarks[r]+e.tShift[r],a=e.eMarks[r];if(u+2>a)return!1;if("$$"!==e.src.slice(u,u+2))return!1;if(u+=2,o=e.src.slice(u,a),t)return!0;for("$$"===o.trim().slice(-2)&&(o=o.trim().slice(0,-2),f=!0),c=r;!f&&(c++,!(c>=n))&&(u=e.bMarks[c]+e.tShift[c],a=e.eMarks[c],!(u<a&&e.tShift[c]<e.blkIndent));)"$$"===e.src.slice(u,a).trim().slice(-2)&&(s=e.src.slice(0,a).lastIndexOf("$$"),i=e.src.slice(u,s),f=!0);return e.line=c+1,l=e.push("math_block","math",0),l.block=!0,l.content=(o&&o.trim()?o+"\n":"")+e.getLines(r+1,c,e.tShift[r],!0)+(i&&i.trim()?i:""),l.map=[r,e.line],l.markup="$$",!0}r.exports=(e,r)=>{(r=r||{}).server=r.server||"https://math.now.sh";const n=e=>encodeURIComponent(e).replace("(","%28").replace(")","%29");e.inline.ruler.after("escape","math_inline",o),e.block.ruler.after("blockquote","math_block",i,{alt:["paragraph","reference","blockquote","list"]}),e.renderer.rules.math_inline=(e,t)=>(e=>{try{return`<img src="${r.server}?inline=${n(e)}"/>`}catch(r){return console.error(r),e}})(e[t].content),e.renderer.rules.math_block=(e,t)=>(e=>{try{return`<img src="${r.server}?from=${n(e)}" style="display:block;margin: 0 auto;"/><br>`}catch(r){return console.error(r),e}})(e[t].content)}},{}]},{},[1])(1)}));
